{
  "name": "secure-frontend",
  "version": "1.0.0",
  "description": "企业级安全前端资源加密存储解决方案，专为需要高度安全性的Web应用程序设计",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "dev": "node scripts/dev.js",
    "dev:linux": "bash scripts/dev-linux.sh start",
    "dev:docker": "bash scripts/dev-linux.sh start docker",
    "dev:app": "bash scripts/dev-linux.sh start app",
    "dev:stop": "bash scripts/dev-linux.sh stop",
    "dev:status": "bash scripts/dev-linux.sh status",
    "dev:logs": "bash scripts/dev-linux.sh logs",
    "dev:clean": "bash scripts/dev-linux.sh clean",
    "build": "cross-env NODE_ENV=development node scripts/build/build.js",
    "build:prod": "cross-env NODE_ENV=production node scripts/build/build.js --production",
    "build:staging": "cross-env NODE_ENV=staging node scripts/build/build.js --staging",
    "start": "node scripts/start.js",
    "deploy": "node scripts/deploy/deploy.js",
    "deploy:staging": "cross-env NODE_ENV=staging node scripts/deploy/deploy.js staging",
    "deploy:prod": "cross-env NODE_ENV=production node scripts/deploy/deploy.js production --auto-rollback",
    "deploy:docker": "cross-env NODE_ENV=production node scripts/deploy/deploy.js production --docker",
    "rollback": "node scripts/deploy/deploy.js production --rollback",
    "encrypt": "node src/core/encryption.js",
    "upload": "node src/core/upload.js",
    "serve": "node server/index.js",
    "serve:prod": "cross-env NODE_ENV=production node server/index.js",
    "test": "cross-env NODE_ENV=test node scripts/testing/test-runner.js",
    "test:unit": "cross-env NODE_ENV=test node scripts/testing/test-runner.js unit",
    "test:integration": "cross-env NODE_ENV=test node scripts/testing/test-runner.js integration",
    "test:e2e": "cross-env NODE_ENV=test node scripts/testing/test-runner.js e2e",
    "test:security": "cross-env NODE_ENV=test TEST_MODE=1 node scripts/runners/run-security-test.js",
    "test:performance": "cross-env NODE_ENV=test node scripts/runners/run-performance-test.js",
    "test:linux": "bash scripts/deploy/environment-verification.sh --environment dev --debug",
    "lint": "node scripts/runners/run-code-quality.js",
    "lint:fix": "node scripts/runners/run-code-quality.js --fix",
    "security": "node scripts/runners/run-security-audit.js",
    "security:scan": "node scripts/runners/run-security-audit.js --scan",
    "debug": "node scripts/debug/debug-tools.js",
    "debug:inspect": "node --inspect scripts/debug/debug-tools.js inspect",
    "debug:profile": "node scripts/debug/debug-tools.js profile",
    "debug:monitor": "node scripts/debug/debug-tools.js monitor",
    "monitoring:setup": "node scripts/monitoring/setup-monitoring.js",
    "monitoring:setup:staging": "cross-env NODE_ENV=staging node scripts/monitoring/setup-monitoring.js staging",
    "monitoring:setup:production": "cross-env NODE_ENV=production node scripts/monitoring/setup-monitoring.js production",
    "health:check": "node scripts/monitoring/health-check.js",
    "health:check:verbose": "node scripts/monitoring/health-check.js --verbose",
    "health:check:alert": "node scripts/monitoring/health-check.js --alert",
    "docker:up": "docker compose --env-file .env.dev -f config/docker/docker-compose.yml up -d",
    "docker:down": "docker compose --env-file .env.dev -f config/docker/docker-compose.yml down",
    "docker:logs": "docker compose --env-file .env.dev -f config/docker/docker-compose.yml logs -f",
    "docker:build": "docker compose --env-file .env.dev -f config/docker/docker-compose.yml build",
    "docker:staging": "docker compose --env-file .env.staging -f config/docker/docker-compose.staging.yml up -d",
    "docker:prod": "docker compose --env-file .env.prod -f config/docker/docker-compose.production.yml up -d",
    "preinstall": "node -e \"console.log('Platform:', process.platform); console.log('Node version:', process.version)\"",
    "postinstall": "node -e \"const fs = require('fs'); const path = require('path'); ['logs', 'logs/development', 'logs/staging', 'logs/production', 'temp', 'uploads'].forEach(dir => { const fullPath = path.join(process.cwd(), dir); if (!fs.existsSync(fullPath)) { fs.mkdirSync(fullPath, { recursive: true }); console.log('Created directory:', fullPath); } });\""
  },
  "keywords": [
    "encryption",
    "frontend",
    "security",
    "cloud-storage",
    "aes",
    "webcrypto"
  ],
  "author": "SecureFrontEnd Team",
  "license": "AGPL-3.0",
  "dependencies": {
    "@aws-sdk/client-s3": "^3.913.0",
    "@azure/storage-blob": "^12.17.0",
    "ali-oss": "^6.20.0",
    "archiver": "^6.0.1",
    "axios": "^1.6.2",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "cross-env": "^10.1.0",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.3.1",
    "elliptic": "^6.6.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.1.0",
    "helmet": "^8.1.0",
    "joi": "^17.11.0",
    "jose": "^6.1.0",
    "pqc-dilithium": "^0.2.0",
    "pqc-kyber": "^0.7.0",
    "rate-limiter-flexible": "^4.0.1",
    "secp256k1": "^5.0.1",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "uuid": "^13.0.0",
    "winston": "^3.11.0",
    "yauzl": "^3.0.0"
  },
  "os": [
    "linux",
    "darwin",
    "win32"
  ],
  "devDependencies": {
    "@eslint/js": "^9.38.0",
    "@types/node": "^22.10.5",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitejs/plugin-vue": "^6.0.1",
    "eslint": "^9.38.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "react": "^19.2.0",
    "react-dom": "^19.2.0",
    "typescript": "^5.7.3",
    "vite": "^7.1.11",
    "vue": "^3.5.22"
  },
  "engines": {
    "node": ">=22.12.0",
    "npm": ">=10.0.0"
  }
}
