version: '3.8'

services:
  app:
    build:
      context: ../..
      dockerfile: config/docker/Dockerfile
    environment:
      - NODE_ENV=development
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=secure_frontend
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - postgres
      - redis
    ports:
      - "3000:3000"

  redis:
    image: ${REDIS_IMAGE:-redis}:${REDIS_TAG_DEV:-7.4.6-alpine}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"

  postgres:
    image: ${POSTGRES_IMAGE:-postgres}:${POSTGRES_TAG_DEV:-15.13-alpine}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=secure_frontend
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"

  nginx:
    image: ${NGINX_IMAGE:-nginx}:${NGINX_TAG_DEV:-1.28.0-alpine}
    ports:
      - "8080:80"

  prometheus:
    image: ${PROM_IMAGE:-prom/prometheus}:${PROM_TAG_DEV:-v3.7.1}
    ports:
      - "9090:9090"

  grafana:
    image: ${GRAFANA_IMAGE:-grafana/grafana}:${GRAFANA_TAG_DEV:-12.2.1}
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
    ports:
      - "3001:3000"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-8.19.5}
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION:-8.19.5}
    ports:
      - "5044:5044"

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-8.19.5}
    ports:
      - "5601:5601"